@model MCV_Employee_Department.API.ViewModel.GetDepartmentResponse
@{ ViewData["Title"] = "Department Index";
    Layout = "~/Views/Shared/_Layout.cshtml"; }


<h1 style="text-align: center; margin-top: 10px; margin-bottom: 30px;">Manage departments</h1>

<div id='addDepartmentModal' class='modal fade' data-url='@Url.Action("AddOrEditDepartment")?id=0'>
    <div id='addDepartmentContainer' class="container partialViewModal">
    </div>
</div>

<button id='addDepartment' class="btn btn-primary btn-outline-primary" style="float: right; margin: 10px;">Add new department</button>
<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th style="text-align: center;">Creation date</th>
            <th style="text-align: center;">Last update date</th>
            <th style="text-align: center;">Department employees</th>
            <th style="text-align:center">Update / Delete</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var Department in Model.DepartmentsWithEmployees.Select(x=>x.Department))
        {
            <tr>
                <td>@Department.Name</td>
                <td style="text-align: center;">@Department.CreationDate.ToString("MM/dd/yyyy")</td>
                <td style="text-align: center;">@Department.LastUpdateDate.ToString("MM/dd/yyyy")</td>
                <td style="text-align: center;"><input type="button" class="btn btn-info" value="Show" data-toggle="modal" data-target="#empModal_@Department.Id"/></td>
                <td style="text-align:center">
                    <a class="btn btn-primary editEmployee" style="cursor: pointer; color: white;" departmentId="@Department.Id">Update</a>
                    <a class="btn btn-danger" style="cursor: pointer; color: white;" departmentId="@Department.Id" onclick="Delete(this)">Delete</a>
                </td>
            </tr>
            <div class="modal" id="empModal_@Department.Id">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">Departement employees</h4>
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                        </div>
                        <div class="modal-body">
                            <div class="container" style=" text-align: center;">
                                <div class="row" style="font-weight:bold">
                                        <div class="col-3">
                                            <div style=" width: 110%">Employee id</div>
                                        </div>
                                        <div class="col-2">
                                            <div>Name</div>
                                        </div>
                                        <div class="col-3">
                                            <div>Title</div>
                                        </div>
                                        <div class="col-4">
                                            <div>Hiring date</div>
                                        </div>
                                </div>

                                @{
                                    var employees = Model.DepartmentsWithEmployees.FirstOrDefault(x => x.Department.Id == Department.Id).Employees.ToList();
                                    foreach (var employee in employees)
                                    {
                                        <div class="row">
                                            <div class="col-3">
                                                <div>@employee.Id</div>
                                            </div>
                                            <div class="col-2">
                                                <div>@employee.Name</div>
                                            </div>
                                            <div class="col-3">
                                                <div>@employee.Title</div>
                                            </div>
                                            <div class="col-4">
                                                <div>@employee.HiringDate.ToString("MM/dd/yyyy")</div>
                                            </div>
                                        </div>
                                    }
                                }
                            </div>
                           </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                        </div>

                    </div>
                </div>
            </div>


        }
    </tbody>
</table>
<div class="box">
    <ul id="example-2" class="pagination"></ul>
</div>
<script>
    function ShowDepartmentEmpoyees(modalId) {

    }

    var totalCount = @Model.TotalCount;
    PaginationBar((sessionStorage.getItem("pageIndex") == null ? 1 : sessionStorage.getItem("pageIndex")) ,totalCount);
        function PaginationBar(currentpage, pagecounts) {
            var totalCount = pagecounts
            var length = 10;
            sessionStorage.setItem("pageIndex", currentpage);
            $('#example-2').pagination({
                total: totalCount,
                current: currentpage,
                length: length,
                size: 0,
                prev: 'Previous',
                next: 'Next',
                click: function (options, $target) {
                    sessionStorage.setItem("pageIndex", options.current);
                    window.location.href = '@Url.Action("Department_Index")?PageIndex=' + (sessionStorage.getItem("pageIndex") -1 );
                }
            });
        }
    $(document).ready(function () {
        $('#addDepartment').click(function () {
                    var url = $('#addDepartmentModal').data('url');
                    $.get(url, function (data) {
                        $('#addDepartmentContainer').html(data);
                        $("#addDepartmentModal").addClass("in");
                        $(".modal-backdrop").show()
                        $("#addDepartmentModal").show();
                        $('#addDepartmentModal').modal('show');
                    });
                });
        $('.editEmployee').click(function () {
            var url = $('#addDepartmentModal').data('url');
            url = url.replace('0', $(this).attr('departmentId'))
                    $.get(url, function (data) {
                        $('#addDepartmentContainer').html(data);
                        $("#addDepartmentModal").addClass("in");
                        $(".modal-backdrop").show()
                        $("#addDepartmentModal").show();
                        $('#addDepartmentModal').modal('show');
                    });
                });
            });
            function Cancel() {
                $("#addDepartmentModal").removeClass("in");
                $(".modal-backdrop").hide()
                $("#addDepartmentModal").hide();
            }
            function Delete(obj) {
                var objToSend = {};
                Swal.fire({
                    title: 'Confirmation',
                    text: "Are you sure",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    cancelButtonText: "Cancel",
                    confirmButtonText: 'Delete'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("DeleteDepartment")",
                            data: { id: $(obj).attr('departmentId') },
                            dataType: "text",
                            success: function (response) {
                                if (response == "True") {
                                    Swal.fire(
                                        'Deleted',
                                        'Deleted successfully',
                                        'success'
                                    ).then((result) => {
                                        Cancel();
                                        location.reload();
                                    })

                                }
                                else {
                                    Swal.fire(
                                        'warning',
                                        'Please remove the added employees in this department first',
                                        'warning'
                                    );
                                    $('#Loader').hide();
                                    $('#SaveBtn').show();
                                    $('#CancelBtn').show();
                                }
                            },
                            error: function (req, status, error) {
                                Swal.fire(
                                    'warning',
                                    'server error',
                                    'warning'
                                );
                                $('#Loader').hide();
                                $('#SaveBtn').show();
                                $('#CancelBtn').show();
                            }
                        });
                    }
                })
            }
</script>